/**
* ========================================================
* TEXT CONTAINERS
* ========================================================
*/
.text--centered p {
	display: block;
	margin-left: auto;
	margin-right: auto;
	max-width: 100%;
	text-align: justify;
	width: 800px;
}
.text--centered .ul, .text--centered ul, .text--centered .ol, .text--centered ol, .text--centered h2, .text--centered h3, .text--centered h4, .text--centered h5 {
	margin-left: auto;
	margin-right: auto;
	max-width: 100%;
	text-align: justify;
	width: 800px;
}
.text--centered .module > * {
	margin-left: auto;
	margin-right: auto;
	max-width: 100%;
	width: 800px;
}
.text--docked {
	box-shadow: 0 0 2rem 1rem hsl(var(--background--secondary));
	bottom: 0;
	left: 0;
	margin: 0;
	position: sticky;
	width: 100%;
	z-index: 3;
}
.text--compact {
	padding: 0.5rem;
}
.text .p, .text p {
	line-height: 1.75;
}
.hr, hr {
	background: hsl(var(--background--bold));
	border: none;
	height: 1px;
	margin: 2rem 0;
}
.kbd, kbd {
	box-shadow: inset 0 -3px 0 0 hsla(var(--text--secondary), 0.5), inset 0 0 0 1px hsla(var(--text--secondary), 0.5);
	border-radius: 3px;
	padding: 2px 6px;
	padding-bottom: 4px;
	vertical-align: bottom;
}
.text p + ul, .text p + ol, .text ul + p, .text ol + p, .text p + p {
	margin-top: 2rem;
}
.text li p + p {
	margin-top: 1.75rem;
}

/**
* ========================================================
* OTHER BLOCK ELEMENTS
* ========================================================
*/
.blockquote, blockquote {
	background: hsl(var(--background));
	border-left: 1px solid hsl(var(--background--bold));
	padding: 1rem;
}
* + .blockquote, * + blockquote {
	margin-top: 1rem;
}
.obscure__input {
	display: none;
}
.obscure__container::after {
	box-shadow: inset 0 -5.5rem 2rem -4rem hsl(var(--background));
	display: none;
}
.obscure--faint::after {
	box-shadow: inset 0 -5.5rem 2rem -4rem hsl(var(--background--secondary));
}
.obscure--alt::after {
	box-shadow: inset 0 -5.5rem 2rem -4rem hsl(var(--background--alt));
}
.obscure__container::after {
	bottom: 0;
	content: "";
	display: block;
	height: 4rem;
	left: 0;
	opacity: 0;
	pointer-events: none;
	position: absolute;
	right: 0;
	transition: opacity 0.2s ease-in-out;
}
.obscure__input:checked + .obscure__container::after {
opacity: 1;
}
.obscure__input:checked + .obscure__container:not(.obscure--long) .obscure__item:nth-of-type(n + 4) {
	display: none;
}
.obscure__input:checked + .obscure--long .obscure__item:nth-of-type(n + 10) {
	display: none;
}
.obscure__input:checked + .obscure__container.obscure--height {
	max-height: 8rem;
	overflow: hidden;
}
.obscure__input:checked + .obscure__container .obscure__button {
	display: inline-block;
}
.obscure__button {
	bottom: 1rem;
	box-shadow: 0 0 0.5rem 0.5rem hsl(var(--background));
	cursor: pointer;
	display: none;
	left: 50%;
	position: absolute;
	transform: translateX(-50%);
	width: auto;
	z-index: 1;
}
.obscure--faint .obscure__button {
	box-shadow: 0 0 1rem 1rem hsl(var(--background--secondary));
}
.obscure--alt .obscure__button {
	box-shadow: 0 0 1rem 1rem hsl(var(--background--alt));
}

.data__container {
	align-items: stretch;
	display: flex;
	flex-wrap: wrap;
	margin: -0.5rem;
}
.data__item {
	border-left: 1px dotted hsl(var(--background--bold));
	border-top: none;
	display: inline-block;
	margin: 0.5rem;
	margin-left: 0;
	padding: 0;
	padding-left: 0.5rem;
}



/**
* ========================================================
* LAYOUT - FOOTER
* ========================================================
*/
.footer__container {
	background: linear-gradient(hsl(var(--background)), transparent);
	padding-top: 3rem;
	text-align: center;
}
.footer__center {
	margin-bottom: 3rem;
	order: 1;
}
.footer__right {
	margin-bottom: 3rem;
	order: 2;
}
.footer__left {
	order: 3;
}
@media(min-width: 800px) {
	.footer__left {
		order: 1;
		text-align: left;
	}
	.footer__center {
		margin-bottom: 0;
		order: 2;
	}
	.footer__right {
		margin-bottom: 0;
		order: 3;
		text-align: right;
	}
}
.footer__message {
	color: hsl(var(--background));
	filter: blur(3px);
	font-size: 1.25rem;
	letter-spacing: 1px;
	transition: 1s color linear, 1s filter linear;
}
.footer__message:hover {
	color: hsl(var(--accent));
	filter: blur(0);
}
.footer__top {
	background: hsl(var(--background));
	bottom: 1rem;
	display: none;
	opacity: 0;
	pointer-events: none;
	position: fixed;
	right: 1rem;
	transition: opacity 0.2s;
	will-change: transform;
	z-index: 100;
}
.footer__top--active, .footer__top:hover {
	opacity: 1;
	pointer-events: auto;
}
.footer__top--visible {
	display: inline-block;
}
.a--patreon {
	background-color: #e85b46;
	border-color: #e85b46;
	color: white;
	font-size: 1rem;
	font-weight: bold;
	margin: auto;
}
.a--patreon:hover {
	border-color: #e85b46;
	color: white;
}
.a--patreon:hover img {
	display: none;
}
.a--patreon:hover::before {
	content: "ðŸ’•";
	display: inline-block;
	line-height: 1;
	height: 1rem;
	width: 2rem;
}
.a--patreon img {
	height: 1rem;
	object-fit: contain;
	vertical-align: middle;
	width: 2rem;
}
.footer__container .a--patreon {
	margin: 1rem auto 0 auto;
	width: auto;
}



/**
* ========================================================
* COMMENTS
* ========================================================
*/
.comment__reply {
	display: inline-block;
}
.comment__sign-in, .comment__reply {
	margin-top: 1rem;
}
.comment__template:first-of-type {
	margin-top: 3rem;
}
.comment__template + .comment__template:not([data-thread-id]), .comment__template + .comment__template[data-thread-id=""] {
	border-top: 1px dotted hsl(var(--text--secondary));
}



/**
* ========================================================
* MEDIA MODULES
* ========================================================
*/
* + .module {
	margin-top: 2rem;
}
.module + * {
	margin-top: 2rem;
}
.module ul, .module ol {
	color: hsl(var(--text--secondary));
}
.text .module {
	margin-left: -1rem;
	margin-right: -1rem;
}
.text--compact .module {
	margin-left: -0.5rem;
	margin-right: -0.5rem;
}
.module {
	background-image: linear-gradient(to bottom right,hsl(var(--background--secondary)) 1px,transparent 0);
	background-size: 3px 3px;
	padding: 1rem;
}
.module--compact {
	padding: 0.5rem;
}
.module--image {
	text-align: center;
}
.module--image a {
	display: inline-block;
	margin-left: auto;
	margin-right: auto;
	vertical-align: bottom;
}
.module--image img {
	display: inline-block;
	height: auto;
	max-height: 600px;
	max-width: 100%;
}
.module--image .h5:not(:empty) {
	margin-top: 1rem;
}
.module--twitter > * {
	display: block;
	margin: 0 auto !important;
}
.module--youtube {
	display: flex;
	max-height: calc(1rem + 315px + 1rem);
	overflow: hidden;
}
.module--youtube::before {
	content: "";
	display: inline-block;
	height: 0;
	padding-bottom: 56%;
	width: 0;
}
.module--youtube iframe {
	margin: 0 auto;
	max-width: 100%;
	width: 560px;
}
.youtube__embed {
	background-position: center;
	background-size: cover;
	cursor: pointer;
	display: block;
	height: auto;
	margin: 0 auto;
	max-width: 640px;
	width: 100%;
}
.youtube__embed::before {
	content: "";
	display: block;
	padding-top: 56%;
}
.youtube__embed::after {
	background: #333;
	border-radius: 15px/10px;
	color: #fff;
	content: "â–¶";
	display: block;
	font-size: 28px;
	left: 50%;
	line-height: 50px;
	position: absolute;
	text-align: center;
	top: 50%;
	transform: translate(-50%, -50%);
	width: 75px;
}
.youtube__embed:hover::after {
	background: red;
}



/**
* ========================================================
* TABLES
* ========================================================
*
* - So, essentially, I want tr + tr to have a gray, dotted,
*   1px top border, with a 0.5rem margin on either side.
* - Unfortunately, table borders are rendered at the td
*   level, so dotted borders look like shit.
* - Also, there's no way (via css, at least), to set a real
*   margin--we can only set td-level padding.
*
* - So, we're using a radial gradient background image as
*   faux dotted border. It looks good and allows us to
*   target at whatever level we want (tbody, tr, etc.).
* - To create padding under the faux-border, we simply use
*   normal padding on the td.
* - To create a faux-margin above the faux-border, we set
*   a transparent (real) top border on the td.
*    . NOTE: For this to work, the table's border-collapse
*    . must be 'separate'! Otherwise, any border applied
*    . to the td will distributed equally between the td
*    . and the previous tr. This leads to some really odd
*    . spacing issues.
*    . For example's sake: a 1rem top border on a td will
*    . push down its background-image by 0.5rem. The contents
*    . of the td will also be pushed down, but only if the
*    . td's top padding is less than half of the border
*    . width (< 0.5rem in this case).
*    . Meanwhile, the preceding tr will have 0.5rem added
*    . in additional height, but its background-image (and
*    . the background image of the original td's parent
*    . tr) is unaffected.
*    . It makes sense if you think about the purpose of
*    . collapsed borders, but I found it unintuitive
*    . enough to warrant mentioning.
* - Finally, we must move down the tbody's background img
*   by 0.5rem to account for the 0.5rem faux-margin.
*
* - By the way, 'word-break: break-work' solves an issue
*   where really long words were affecting the width of
*   td's, despite them not actually needing to wrap. W/e.
*
*/
table, .table {
	width: 100%;
}
td:not(:last-of-type), .td:not(:last-of-type) {
	padding-right: 1rem;
}
tr:not(:first-of-type) td, .tr:not(:first-of-type) .td {
	border-top: 1px dotted hsl(var(--background--bold));
	padding-top: 0.5rem;
}
tr:not(:last-of-type) td, .tr:not(:last-of-type) .td {
	padding-bottom: 0.5rem;
}
table + table tr:first-of-type td, tbody + tbody tr:first-of-type td {
	border-top: 1px dotted hsl(var(--text--secondary));
	margin-top: 1.5rem;
	padding-top: 1.5rem;
}



/**
* ========================================================
* LISTS
* ========================================================
*/
.ol, .ul, ol, ul {
	list-style-type: none;
	margin: 0;
	padding: 0;
	text-indent: 0;
}
.ol + .ol, .ul + .ul, ol + ol, ul + ul {
	border-top: 1px dotted hsl(var(--text--secondary));
	margin-top: 1rem;
	padding-top: 1rem;
}
.ol .ol, .ul .ul, ol ol, ul ul {
	margin-top: 1rem;
}
.ol, ol, .li[start=1], li[start=1] {
	counter-reset: defaultcounter;
}
.ol .li, ol li {
	counter-increment: defaultcounter;
}
.ol .li::before, ol li::before {
	color: hsl(var(--text--secondary));
	content: counter(defaultcounter) ". ";
	display: inline-block;
	float: left;
	min-width: 1rem;
	padding-right: 1ch;
}
.ul--bulleted > .li, .ul--bulleted > li {
	padding-left: 1rem;
}
.ul--bulleted > .li::before, .ul--bulleted > li::before {
	background: radial-gradient(circle, hsl(var(--text--secondary)) 3px, transparent 0);
	color: transparent;
	content: "-";
	display: inline-block;
	float: left;
	margin-left: -1rem;
	width: 6px;
}
.ul--bulleted .ul--bulleted .li::before, .ul--bulleted .ul--bulleted li::before {
	background: radial-gradient(circle, hsl(var(--background--bold)) 3px, transparent 0);
}
.ul--compact .li, .ul--compact li, .li--compact {
	padding: 0.5rem 0;
}
.li, li {
	padding: 1rem 0;
}
.li:first-of-type, li:first-of-type {
	padding-top: 0;
}
.li:last-of-type, li:last-of-type {
	padding-bottom: 0;
}
.li + .li, li + li {
	border-top: 1px dotted hsl(var(--background--bold));
}
.li + *:not(.li), li + *:not(li) {
	margin-top: 1rem;
}
*:not(.li) + .li, *:not(li) + li {
	padding-top: 0;
}
.ul--inline, .ol--inline {
	border: none;
}
.ul--inline li, .ol--inline li {
	border: none;
	display: inline-block;
	margin: 0;
	padding: 0;
}
.ul--bordered {
	margin-left: -0.5rem;
}
.ul--bordered li {
	border-left: 1px dotted hsl(var(--background--bold));
	padding-left: 0.5rem;
}
.ol--inline .li, .ol--inline li, .ul--inline .li, .ul--inline li {
	padding-right: 0.5rem;
}
.ol--inline .li::before, .ol--inline li::before {
	display: inline;
	padding-right: 3px;
}



/**
* =======================================================
* DEFAULT INLINE SUBMIT HANDLER
* =======================================================
*/
[data-role=submit-status]:not(.slide--hidden) {
	margin-left: 0.5rem;
}
.text[data-role=result]:not(:empty) {
	margin-bottom: 0;
	margin-top: 1rem;
	max-height: 20vh;
	overflow-y: auto;
}




/**
* ========================================================
* INPUTS / FORMS
* ========================================================
*/
.input__row,
.input__group {
	align-items: flex-end;
	display: flex;
	flex-direction: row;
	flex-wrap: wrap;
	margin: 0;
}
.input__row {
	margin-left: -0.5rem;
	margin-top: -0.5rem;
}
.input__row + .input__row {
	margin-top: 0.5rem;
}
.input__group {
	margin-top: 0.5rem;
	max-width: 100%;
}
.input__group--right {
	margin-left: auto;
}
.input__group::before {
	content: "";
	display: inline-block;
	height: 0;
	width: 0.5rem;
}
.input__label {
	align-self: flex-start;
	display: block;
	flex: none;
	height: 3rem;
	line-height: 1;
	min-width: 0;
	overflow: visible;
	white-space: nowrap;
	width: 0;
}
.input__label + .input__textarea {
	margin-top: 1rem;
}
.input, .input--secondary, .input__button, .input__checkbox-label, .input__select, .input__textarea, button, input, select, textarea {
	background: hsl(var(--background--bold));
	background-image:
		linear-gradient(to right, hsl(var(--interactive--secondary)) 50%, transparent 0),
		linear-gradient(rgba(255,255,255, 0.05), rgba(255,255,255, 0.05)),
		linear-gradient(rgba(255,255,255, 0.1),  rgba(255,255,255, 0.1));
	background-position: bottom right;
	background-repeat: no-repeat;
	background-size:
		300% 2px,
		100% 2px,
		0    2px;
	border: none;
	border-radius: 3px;
	box-sizing: content-box;
	color: hsl(var(--text));
	font-family: inherit;
	font-size: 1rem;
	height: 1rem;
	line-height: 1rem;
	margin: 0;
	max-width: calc(100% - 1rem);
	outline: none;
	padding: 0.5rem;
	transition: flex 0.1s ease-in-out, background-position 0.1s ease-in-out;
}
.input:active, .input:focus, .input--secondary:active, .input--secondary:focus, .input__button:active, .input__button:focus, .input__select:active, .input__select:focus, .input__textarea:active, .input__textarea:focus, button:active, button:focus, input:active, input:focus, select:active, select:focus, textarea:active, textarea:focus {
	background-position: bottom left;
}
.input:hover, .input--secondary:active, .input--secondary:focus, .input__button:hover, .input__select:hover, .input__textarea:hover, button:hover, input:hover, select:hover, textarea:hover {
	background-size:
		300% 2px,
		0    2px,
		100% 2px;
}
.any--flex .input, .any--flex .input__button, .any--flex .input__select, .any--flex .input__textarea, .any--flex button, .any--flex input, .any--flex select, .any--flex textarea {
	max-width: 100%;
}
.input__row .input,
.input__row .input--secondary,
.input__row input {
	flex: 1;
	min-width: 100px;
}
.input__group .input,
.input__group .input--secondary,
.input__group input {
	border-radius: 0;
}
.input__group .input:first-of-type,
.input__group input:first-of-type,
.input__group .selectized {
	border-bottom-left-radius: 3px;
	border-top-left-radius: 3px;
}
.input__group .input:last-of-type,
.input__group input:last-of-type {
	border-bottom-right-radius: 3px;
	border-top-right-radius: 3px;
}
.input__group .input__checkbox-label ~ .input__checkbox-label {
	margin-left: 0.5rem;
}
.input--secondary, .input--secondary:active, .input--secondary:focus, .input--secondary:hover {
	box-shadow: inset 2rem 0 2rem -2rem rgba(0,0,0, 0.25);
}
.input--secondary:not(:focus):not(:active), .input--secondary::placeholder, .input--secondary::-webkit-input-placeholder {
	color: hsl(var(--text--secondary));
}
.input__button, button {
	background-image:
		linear-gradient(rgba(255,255,255,0.05),  rgba(255,255,255,0.05)),
		linear-gradient(rgba(255,255,255,0.1),   rgba(255,255,255,0.1)),
		linear-gradient(rgba(0,0,0, 0.25),       transparent),
		linear-gradient(to right, hsl(var(--interactive--secondary)) 50%, transparent 0);
	background-position: top, top, top, bottom right;
	background-size: 100% 2px, 0, 0, 0;
	color: hsl(var(--text));
	cursor: pointer;
	font-family: monospace, "brackets", ãƒ¡ã‚¤ãƒªã‚ª, Meiryo, "ãƒ’ãƒ©ã‚®ãƒŽè§’ã‚´ Pro W3", "Hiragino Kaku Gothic Pro", Osaka, "ï¼­ï¼³ ï¼°ã‚´ã‚·ãƒƒã‚¯", "MS PGothic", serif;
	font-weight: normal;
	height: auto;
	text-transform: uppercase;
}
.input__button:hover, button:hover {
	background-size: 0, 100% 2px, 0, 0;
}
.input__button:focus, button:focus {
	background-position: top, top, top, bottom left;
	background-size: 100% 2px, 0, 0, 201% 2px;
}
.input__button:focus:not(:active):hover, button:focus:not(:active):hover {
	background-position: top, top, top, bottom left;
	background-size: 0, 100% 2px, 0, 201% 2px;
}
.input__button:active, button:active {
	background-position: top, top, top, bottom left;
	background-size: 0, 0, 100%, 0;
}
.input__checkbox {
	display: inline-block;
	max-width: 0;
	min-width: 0 !important;
	opacity: 0;
	overflow: hidden;
	width: 0;
}
.input__checkbox-label {
	background-image: none;
	color: hsl(var(--text--secondary));
	cursor: pointer;
	font-family: monospace, "brackets", ãƒ¡ã‚¤ãƒªã‚ª, Meiryo, "ãƒ’ãƒ©ã‚®ãƒŽè§’ã‚´ Pro W3", "Hiragino Kaku Gothic Pro", Osaka, "ï¼­ï¼³ ï¼°ã‚´ã‚·ãƒƒã‚¯", "MS PGothic", serif;
	margin-bottom: 0.25rem;
	margin-top: 0.25rem;
	padding: 0.25rem 0.5rem;
	user-select: none;
}
.input__checkbox-label--selected, .input__checkbox:checked + .input__checkbox-label {
	color: hsl(var(--text));
}
.input__checkbox-label--selected::before, .input__checkbox:checked + .input__checkbox-label::before, .input__checkbox:checked + .any__tag::before {
	opacity: 1;
}
.input__checkbox:not(:checked) + .input__checkbox-label::before {
	clip-path: url(#symbol__unchecked);
}
.input__checkbox:checked + .input__checkbox-label::before {
	clip-path: url(#symbol__checked);
}
.input__textarea, textarea {
	height: 4rem;
	line-height: 1.5;
}
.input__select, select[name][name][name] {
	box-sizing: content-box;
	height: calc(2rem - 4px);
	line-height: 2rem;
	padding-bottom: 2px;
	padding-top: 2px;
	vertical-align: middle;
	width: auto;
}
.input__option, select[name][name][name] option {
	height: calc(2rem - 4px);
	line-height: 2rem;
	vertical-align: middle;
}
select[multiple][multiple][multiple] {
	overflow: hidden;
}
select[multiple][multiple][multiple] option {
	display: inline;
	margin-right: 0.5rem;
}
select[multiple][multiple][multiple] option + option::before {
	background: hsl(var(--background--bold));
	color: hsl(var(--text));
	content: ",";
	display: inline-block;
	margin-left: -0.5rem;
	width: 0.5rem;
}
select[multiple][multiple][multiple] option::after {
	background: hsl(var(--background--bold));
	color: hsl(var(--text));
	content: attr(data-name);
	left: 0;
	position: absolute;
	top: 0;
	width: 100%;
}
[size][size][size] {
	min-width: 0;
}
[data-role="status"][class*=symbol] {
	align-self: center;
	margin-left: 0.5rem;
}
[disabled], [readonly] {
	opacity: 0.5;
}